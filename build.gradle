apply plugin: "base"
apply plugin: "idea"
apply plugin: "java"
apply plugin: "maven"

def GLOBAL_VERSION = "1.0"
def GLOBAL_BUILD_VERSION = "2"
def GLOBAL_GROUP = "com.mornya.lib"
def DEFAULT_PROFILE = "local"

group GLOBAL_GROUP
version GLOBAL_VERSION

ext {
	// "gradle -Pprofile=release"으로 release 배포
	serviceId = project.getRootProject().name
	profile = project.hasProperty("profile") ? project.getProperties().get("profile") : DEFAULT_PROFILE
	uploadRepository = "file://" + System.getProperty('user.home') + "/.m2/repository"

	println("[Global variables]")
	println("  serviceId: ${serviceId}")
	println("  profile: ${profile}")
	println("  uploadRepository: ${uploadRepository}")
	println()
}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = "4.2.1"
}

// JDK compatibility version
sourceCompatibility = 1.6
targetCompatibility = 1.6

// encoding source codes
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

// slf4j를 사용하므로 commons-logging 제외
[configurations.runtime, configurations.default]*.exclude(module: "commons-logging")

project.version = "${GLOBAL_VERSION}.${GLOBAL_BUILD_VERSION}"
project.sourceSets.main.resources.srcDirs = ["src/main/resources"]

// 하위 프로젝트 src/main/java, src/main/resources, src/test/java, src/test/resources 폴더 만들기
task initSrc << {
	if (project.hasProperty('sourceSets')) {
		project.sourceSets*.allSource.srcDirTrees.flatten().dir.each {
			dir ->
				println "Make dir: ${dir}"
				dir.mkdirs()
		}
	}
}

// set IDEA output path
idea {
	module {
		inheritOutputDirs = false
		outputDir = file("${buildDir}/classes/main")
		jdkName = "1.6"
		downloadJavadoc = true
		downloadSources = true
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	mavenLocal()
}

// generate JAR
project.jar {
	baseName = project.name
	version = project.version
	manifest.attributes("Implementation-Title": baseName, "Implementation-Version": version)
}

// upload JAR to repository
project.uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: uploadRepository)
			pom.groupId = GLOBAL_GROUP
			pom.artifactId = project.name
			pom.version = "${GLOBAL_VERSION}.${GLOBAL_BUILD_VERSION}"
		}
	}
	return 0
}

dependencies {
	// SLF4J & Logback
	compile "org.slf4j:slf4j-api:1.7.12"
	compile "ch.qos.logback:logback-classic:1.1.3"

	compile "com.fasterxml.jackson.core:jackson-annotations:2.3.2"
	compile "javax.servlet:javax.servlet-api:3.0.1"
	compile "org.springframework.security:spring-security-crypto:3.2.3.RELEASE"
	compile "org.springframework.social:spring-social-config:1.1.0.RELEASE"
	compile "com.fasterxml.jackson.core:jackson-core:2.3.2"
	compile "com.fasterxml.jackson.core:jackson-databind:2.3.2"
	compile "org.springframework.social:spring-social-core:1.1.0.RELEASE"
	compile "org.springframework.social:spring-social-security:1.1.0.RELEASE"

	testCompile "junit:junit:4.11"
	testCompile "org.springframework:spring-test:4.2.0.RELEASE"
	testCompile "org.springframework:spring-core:4.2.0.RELEASE"
}
